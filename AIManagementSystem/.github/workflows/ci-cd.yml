name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          cd services/model_training
          pip install -r requirements.txt

      - name: Run linter
        run: |
          cd services/model_training
          pip install flake8
          flake8 .

      - name: Run model training
        run: |
          cd services/model_training
          python app.py

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          cd services/model_training
          pip install -r requirements.txt

      - name: Run linter
        run: |
          cd services/model_training
          pip install flake8
          flake8 .

      - name: Run tests
        run: |
          cd services/model_training
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and tag Docker images
        run: |
          docker-compose build

      - name: Push Docker images
        run: |
          for service in model_training model_evaluation model_deployment model_monitoring; do
            docker tag ${service}:latest your_dockerhub_username/${service}:latest
            docker push your_dockerhub_username/${service}:latest
          done

      - name: Deploy application
        run: |
          # Add your deployment commands here
          echo "Deploying application..."